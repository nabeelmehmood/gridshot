{"version":3,"sources":["modules/GameOverlay/index.module.css","modules/Context/index.js","modules/SphereGrid/index.js","modules/Canvas/index.js","modules/Cursor/index.js","modules/GameOverlay/index.js","modules/StartOverlay/index.js","modules/Game/index.js","App.js","index.js"],"names":["module","exports","timerInterval","GameContext","createContext","GAME_STATES","SCORE_CONSTATS","GameContextProvider","children","useState","timeLeft","setTimeLeft","gameStart","setGameStart","score","setScore","totalClicks","setTotalClicks","useEffect","setInterval","time","clearInterval","Provider","value","getRandom","list","randomNumber","Math","floor","random","includes","SphereGrid","sphereList","setSphereList","Sphere","useCallback","position","id","onClick","e","object","sphereId","newId","newList","filter","item","push","color","ThreeCanvas","controls","useRef","useContext","current","unlock","onCreated","cursor","document","querySelector","startOverlay","addEventListener","body","style","display","camera","rotation","set","x","Vector3","getDirection","castShadow","intensity","scale","metalness","roughness","side","DoubleSide","PointerLockControls","selector","ref","Cursor","cursorRef","updatePosition","left","clientX","top","clientY","removeEventListener","className","GameOverlay","showFinishedOverlay","totalScore","misses","accuracy","toFixed","class","styles","gameOverlay","counter","count","finishedOverlay","StartOverlay","showReset","Game","clicks","height","width","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4de3cfa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameOverlay\":\"GameOverlay_gameOverlay__11lfk\",\"counter\":\"GameOverlay_counter__10t_X\",\"count\":\"GameOverlay_count__1Jwug\",\"finishedOverlay\":\"GameOverlay_finishedOverlay__3Uj9q\"};","import { createContext, useEffect, useState } from 'react';\r\n\r\nconst GameContext = createContext();\r\n\r\nconst GAME_STATES = {\r\n  NOT_STARTED: 'NOT_STARTED',\r\n  START_TIMER: 'START_TIMER',\r\n  STARTED: 'STARTED',\r\n  FINISHED: 'FINISHED'\r\n};\r\n\r\nconst SCORE_CONSTATS = {\r\n  HIT: 10,\r\n  CLICK_NEGATIVE: 5\r\n}\r\n\r\nlet timerInterval;\r\n\r\nconst GameContextProvider = ({ children }) => {\r\n  const [timeLeft, setTimeLeft] = useState(60);\r\n  const [gameStart, setGameStart] = useState(GAME_STATES.NOT_STARTED);\r\n  const [score, setScore] = useState(0);\r\n  const [totalClicks, setTotalClicks] = useState(0);\r\n\r\n  useEffect(() => {\r\n    //controls timer\r\n    if (gameStart === GAME_STATES.START_TIMER) {\r\n      timerInterval = setInterval(() => {\r\n        setTimeLeft(time => {\r\n          if (time > 1) {\r\n            return time - 1;\r\n          } else {\r\n            clearInterval(timerInterval);\r\n            setGameStart(GAME_STATES.FINISHED);\r\n            return 0;\r\n          }\r\n        });\r\n      }, 1000);\r\n      setGameStart(GAME_STATES.STARTED);\r\n    }\r\n    if (gameStart === GAME_STATES.FINISHED) {\r\n      clearInterval(timerInterval);\r\n    }\r\n  }, [gameStart]);\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        timeLeft,\r\n        setTimeLeft,\r\n        score,\r\n        setScore,\r\n        gameStart,\r\n        setGameStart,\r\n        totalClicks,\r\n        setTotalClicks\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GameContext, GameContextProvider, GAME_STATES, SCORE_CONSTATS };\r\n","import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { GameContext, SCORE_CONSTATS } from '../Context';\r\n\r\nconst getRandom = list => {\r\n  let randomNumber = Math.floor(Math.random() * 21);\r\n  while (list.includes(randomNumber)) {\r\n    randomNumber = Math.floor(Math.random() * 21);\r\n  }\r\n  return randomNumber;\r\n};\r\n\r\nconst SphereGrid = ({setScore = () => {}}) => {\r\n  const [sphereList, setSphereList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setSphereList([getRandom([]), getRandom([]), getRandom([])]);\r\n  }, []);\r\n\r\n  const Sphere = useCallback(\r\n    ({ position, id }) => {\r\n      return (\r\n        <mesh\r\n          onClick={e => {\r\n            const id = e.object.sphereId;\r\n            const newId = getRandom(sphereList);\r\n            const newList = [...sphereList].filter(item => item !== id);\r\n            newList.push(newId);\r\n            setSphereList(newList);\r\n            setScore(score => score + 1);\r\n          }}\r\n          sphereId={id}\r\n          position={position}\r\n        >\r\n          <sphereGeometry />\r\n          <meshPhysicalMaterial color={'red'} />\r\n        </mesh>\r\n      );\r\n    },\r\n    [sphereList]\r\n  );\r\n\r\n  return (\r\n    <group position={[0, 0, -9]}>\r\n      {sphereList.includes(0) && <Sphere id={0} position={[9, 1, 0]} />}\r\n      {sphereList.includes(1) && <Sphere id={1} position={[6, 1, 0]} />}\r\n      {sphereList.includes(2) && <Sphere id={2} position={[3, 1, 0]} />}\r\n      {sphereList.includes(3) && <Sphere id={3} position={[0, 1, 0]} />}\r\n      {sphereList.includes(4) && <Sphere id={4} position={[-3, 1, 0]} />}\r\n      {sphereList.includes(5) && <Sphere id={5} position={[-6, 1, 0]} />}\r\n      {sphereList.includes(6) && <Sphere id={6} position={[-9, 1, 0]} />}\r\n\r\n      {sphereList.includes(7) && <Sphere id={7} position={[9, 4, 0]} />}\r\n      {sphereList.includes(8) && <Sphere id={8} position={[6, 4, 0]} />}\r\n      {sphereList.includes(9) && <Sphere id={9} position={[3, 4, 0]} />}\r\n      {sphereList.includes(10) && <Sphere id={10} position={[0, 4, 0]} />}\r\n      {sphereList.includes(11) && <Sphere id={11} position={[-3, 4, 0]} />}\r\n      {sphereList.includes(12) && <Sphere id={12} position={[-6, 4, 0]} />}\r\n      {sphereList.includes(13) && <Sphere id={13} position={[-9, 4, 0]} />}\r\n\r\n      {sphereList.includes(14) && <Sphere id={14} position={[9, 7, 0]} />}\r\n      {sphereList.includes(15) && <Sphere id={15} position={[6, 7, 0]} />}\r\n      {sphereList.includes(16) && <Sphere id={16} position={[3, 7, 0]} />}\r\n      {sphereList.includes(17) && <Sphere id={17} position={[0, 7, 0]} />}\r\n      {sphereList.includes(18) && <Sphere id={18} position={[-3, 7, 0]} />}\r\n      {sphereList.includes(19) && <Sphere id={19} position={[-6, 7, 0]} />}\r\n      {sphereList.includes(20) && <Sphere id={20} position={[-9, 7, 0]} />}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default SphereGrid;\r\n","import { PointerLockControls, Sky } from '@react-three/drei';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { DoubleSide, Vector3 } from 'three';\r\nimport { useContext, useEffect, useRef } from 'react';\r\n// import Controls from \"../Controls\";\r\nimport SphereGrid from '../SphereGrid';\r\nimport { GameContext, GAME_STATES } from '../Context';\r\nimport './index.css';\r\n\r\nconst ThreeCanvas = () => {\r\n  const controls = useRef();\r\n  const { gameStart, setGameStart, setTimeLeft, setScore, setTotalClicks } =\r\n    useContext(GameContext);\r\n\r\n  useEffect(() => {}, [controls]);\r\n  useEffect(() => {\r\n    if (gameStart === GAME_STATES.FINISHED) {\r\n      controls.current.unlock();\r\n    }\r\n  }, [gameStart]);\r\n\r\n  const startGame = () => {\r\n    setTimeLeft(60);\r\n    setGameStart(GAME_STATES.START_TIMER);\r\n    setScore(0);\r\n    setTotalClicks(0);\r\n  };\r\n\r\n  return (\r\n    <Canvas\r\n      onCreated={e => {\r\n        const cursor = document.querySelector('#cursor');\r\n        const startOverlay = document.querySelector('#startOverlay');\r\n        controls.current.addEventListener('lock', () => {\r\n          document.body.style.cursor = 'none';\r\n          cursor.style.display = 'initial';\r\n          startOverlay.style.display = 'none';\r\n          startGame();\r\n        });\r\n        controls.current.addEventListener('unlock', () => {\r\n          document.body.style.cursor = 'initial';\r\n          cursor.style.display = 'none';\r\n          startOverlay.style.display = 'block';\r\n          controls.current && controls.current.camera && controls.current.camera.rotation.set(0, 0, 0);\r\n          setGameStart(GAME_STATES.FINISHED);\r\n        });\r\n        controls.current.addEventListener('change', e => {\r\n          const x = new Vector3();\r\n          controls.current.getDirection(x);\r\n        });\r\n      }}\r\n    >\r\n      <pointLight\r\n        castShadow\r\n        color={`#fff`}\r\n        position={[0, 4, 10]}\r\n        intensity={2}\r\n      />\r\n      <ambientLight intensity={1} />\r\n      <SphereGrid setScore={setScore} />\r\n      <mesh scale={[20, 10, 18]} position={[0, 4, 0]}>\r\n        <boxGeometry />\r\n        <meshPhysicalMaterial\r\n          metalness={0.7}\r\n          roughness={2}\r\n          color=\"#fff\"\r\n          side={DoubleSide}\r\n        />\r\n      </mesh>\r\n      <PointerLockControls selector=\"#startButton\" ref={controls} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default ThreeCanvas;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nconst Cursor = () => {\r\n  const cursorRef = useRef();\r\n\r\n  const updatePosition = (e) => {\r\n    if (cursorRef.current) {\r\n      cursorRef.current.style.left = `${e.clientX}px`;\r\n      cursorRef.current.style.top = `${e.clientY}px`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"mousemove\", updatePosition);\r\n    return () => document.body.removeEventListener(\"mousemove\", updatePosition);\r\n  }, []);\r\n\r\n  return <span ref={cursorRef} id=\"cursor\" className=\"cursor\"></span>;\r\n};\r\n\r\nexport default Cursor;\r\n","import React, { useContext } from 'react';\r\nimport { GameContext, GAME_STATES, SCORE_CONSTATS } from '../Context';\r\nimport styles from './index.module.css';\r\n\r\nconst GameOverlay = () => {\r\n  const { timeLeft, score, totalClicks, gameStart } = useContext(GameContext);\r\n  \r\n  const calculateScore = () => {\r\n    const positiveScore = score * SCORE_CONSTATS.HIT;\r\n    const negativeScore = (totalClicks - score) * SCORE_CONSTATS.CLICK_NEGATIVE;\r\n    return positiveScore - negativeScore;\r\n  };\r\n\r\n  const showFinishedOverlay = gameStart === GAME_STATES.FINISHED || gameStart === GAME_STATES.NOT_STARTED;\r\n  const totalScore = calculateScore();\r\n  const misses = totalClicks - score;\r\n  const accuracy = ((score / totalClicks) * 100).toFixed(2);\r\n  return (\r\n    <div class={styles.gameOverlay}>\r\n      <div className={styles.counter}>\r\n        <div>\r\n          <span>Time left:</span>\r\n          <span className={styles.count}>{timeLeft}</span>\r\n        </div>\r\n        <div>\r\n          <span>Current score:</span>\r\n          <span className={styles.count}>{totalScore}</span>\r\n        </div>\r\n      </div>\r\n      {showFinishedOverlay && (\r\n        <div className={styles.finishedOverlay}>\r\n          <span>Score: {totalScore}</span>\r\n          <span>Hits: {score}</span>\r\n          <span>Total Clicks: {totalClicks}</span>\r\n          <span>Misses: {misses}</span>\r\n          <span>Accuracy: {accuracy}%</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOverlay;\r\n","import { useContext } from 'react';\r\nimport { GameContext, GAME_STATES } from '../Context';\r\nimport './index.css';\r\n\r\nconst StartOverlay = () => {\r\n  const { gameStart, setGameStart } = useContext(GameContext);\r\n\r\n  const showReset = gameStart === GAME_STATES.FINISHED;\r\n\r\n  return (\r\n    <div id=\"startOverlay\">\r\n      <h3 className=\"text\">\r\n        Click the yellow circle in the center to start. Press ESC to exit.\r\n      </h3>\r\n      {<div id=\"startButton\" className={showReset ? 'disableStart' : ''} />}\r\n      {!showReset && <div className=\"clickTip\">Click the Yellow circle</div>}\r\n      {showReset && (\r\n        <button\r\n          className=\"retryButton\"\r\n          onClick={() => setGameStart(GAME_STATES.NOT_STARTED)}\r\n        >\r\n          Try Again?\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartOverlay;\r\n","import { useContext } from 'react';\r\nimport Canvas from '../Canvas';\r\nimport { GameContext, GAME_STATES } from '../Context';\r\nimport Cursor from '../Cursor';\r\nimport GameOverlay from '../GameOverlay';\r\nimport StartOverlay from '../StartOverlay';\r\n\r\nconst Game = () => {\r\n  const {gameStart, setTotalClicks} = useContext(GameContext);\r\n  \r\n  const pressListener = (e) => {\r\n    if (gameStart === GAME_STATES.STARTED) {\r\n      setTotalClicks(clicks => clicks + 1);\r\n    }  \r\n  }\r\n  return (\r\n    <div onClick={pressListener} style={{ height: '100vh', width: '100vw' }}>\r\n      <Canvas />\r\n      <Cursor />\r\n      <StartOverlay />\r\n      <GameOverlay />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import Game from './modules/Game';\r\nimport { GameContextProvider } from './modules/Context';\r\n\r\nimport './index.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <GameContextProvider>\r\n      <Game />\r\n    </GameContextProvider>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}